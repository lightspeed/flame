// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Autocomplete renders as disabled 1`] = `
.emotion-7 {
  position: relative;
  box-sizing: border-box;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--vd-colour--box);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  box-shadow: none;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: none;
  position: relative;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  box-sizing: border-box;
  color: var(--vd-colour--text);
  word-break: normal;
  width: 100%;
  margin: 0px;
  padding: 0.3666666667rem 12px;
  border: 2px solid var(--vd-colour--framing);
  -webkit-transition-property: border-color,box-shadow;
  transition-property: border-color,box-shadow;
}

.emotion-6:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-6:hover {
  border-color: #848a8a;
}

.cr-autocomplete--error .emotion-6 {
  border-color: #b93435;
}

.cr-autocomplete--error .emotion-6 .cr-autocomplete__dropdownIndicator {
  fill: #b93435;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-0 {
  color: #abb3b3;
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-1 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0,0%,20%);
  box-sizing: border-box;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  opacity: 1;
  cursor: pointer;
  color: #848a8a;
}

.emotion-5 div:hover .cr-autocomplete__clearIndicator {
  fill: #b93435;
}

.emotion-3 {
  width: 1rem;
  height: 1rem;
  vertical-align: text-bottom;
}

<div
  className="emotion-7 cr-autocomplete"
  onKeyDown={[Function]}
>
  <div
    className="emotion-6 cr-autocomplete__control"
    onMouseDown={[Function]}
    onTouchEnd={[Function]}
  >
    <div
      className="emotion-2 cr-autocomplete__value-container"
    >
      <div
        className="emotion-0 cr-autocomplete__placeholder"
      >
        Choose a color
      </div>
      <div
        className="emotion-1"
      >
        <div
          className="cr-autocomplete__input"
          style={
            Object {
              "display": "inline-block",
            }
          }
        >
          <input
            aria-autocomplete="list"
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            disabled={false}
            id="color-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            spellCheck="false"
            style={
              Object {
                "background": 0,
                "border": 0,
                "boxSizing": "content-box",
                "color": "inherit",
                "fontSize": "inherit",
                "label": "input",
                "opacity": 1,
                "outline": 0,
                "padding": 0,
                "width": "1px",
              }
            }
            tabIndex="0"
            type="text"
            value=""
          />
          <div
            style={
              Object {
                "height": 0,
                "left": 0,
                "overflow": "scroll",
                "position": "absolute",
                "top": 0,
                "visibility": "hidden",
                "whiteSpace": "pre",
              }
            }
          >
            
          </div>
        </div>
      </div>
    </div>
    <div
      className="emotion-5 cr-autocomplete__indicators"
    >
      <div
        aria-hidden="true"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        style={
          Object {
            ":hover": Object {
              "color": "hsl(0, 0%, 60%)",
            },
            "boxSizing": "border-box",
            "color": "hsl(0, 0%, 80%)",
            "display": "flex",
            "label": "indicatorContainer",
            "padding": 8,
            "transition": "color 150ms",
          }
        }
      >
        <svg
          className="cr-autocomplete__dropdownIndicator cr-icon emotion-3 emotion-4"
          fill="#848a8a"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="cr-icon__base cr-icon__base-1"
            d="M7.299 10.641c.388.475 1.012.482 1.406 0L11.8 6.86c.389-.475.194-.86-.418-.86H4.623c-.62 0-.812.378-.418.86l3.094 3.781z"
          />
        </svg>
      </div>
    </div>
  </div>
  <input
    name="color-input"
    type="hidden"
    value=""
  />
</div>
`;

exports[`Autocomplete renders correctly 1`] = `
.emotion-7 {
  position: relative;
  box-sizing: border-box;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--vd-colour--box);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  box-shadow: none;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: none;
  position: relative;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  box-sizing: border-box;
  color: var(--vd-colour--text);
  word-break: normal;
  width: 100%;
  margin: 0px;
  padding: 0.3666666667rem 12px;
  border: 2px solid var(--vd-colour--framing);
  -webkit-transition-property: border-color,box-shadow;
  transition-property: border-color,box-shadow;
}

.emotion-6:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-6:hover {
  border-color: #848a8a;
}

.cr-autocomplete--error .emotion-6 {
  border-color: #b93435;
}

.cr-autocomplete--error .emotion-6 .cr-autocomplete__dropdownIndicator {
  fill: #b93435;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-0 {
  color: #abb3b3;
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-1 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0,0%,20%);
  box-sizing: border-box;
}

.emotion-5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  opacity: 1;
  cursor: pointer;
  color: #848a8a;
}

.emotion-5 div:hover .cr-autocomplete__clearIndicator {
  fill: #b93435;
}

.emotion-3 {
  width: 1rem;
  height: 1rem;
  vertical-align: text-bottom;
}

<div
  className="emotion-7 cr-autocomplete"
  onKeyDown={[Function]}
>
  <div
    className="emotion-6 cr-autocomplete__control"
    onMouseDown={[Function]}
    onTouchEnd={[Function]}
  >
    <div
      className="emotion-2 cr-autocomplete__value-container"
    >
      <div
        className="emotion-0 cr-autocomplete__placeholder"
      >
        Choose a color
      </div>
      <div
        className="emotion-1"
      >
        <div
          className="cr-autocomplete__input"
          style={
            Object {
              "display": "inline-block",
            }
          }
        >
          <input
            aria-autocomplete="list"
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            disabled={false}
            id="color-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            spellCheck="false"
            style={
              Object {
                "background": 0,
                "border": 0,
                "boxSizing": "content-box",
                "color": "inherit",
                "fontSize": "inherit",
                "label": "input",
                "opacity": 1,
                "outline": 0,
                "padding": 0,
                "width": "1px",
              }
            }
            tabIndex="0"
            type="text"
            value=""
          />
          <div
            style={
              Object {
                "height": 0,
                "left": 0,
                "overflow": "scroll",
                "position": "absolute",
                "top": 0,
                "visibility": "hidden",
                "whiteSpace": "pre",
              }
            }
          >
            
          </div>
        </div>
      </div>
    </div>
    <div
      className="emotion-5 cr-autocomplete__indicators"
    >
      <div
        aria-hidden="true"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        style={
          Object {
            ":hover": Object {
              "color": "hsl(0, 0%, 60%)",
            },
            "boxSizing": "border-box",
            "color": "hsl(0, 0%, 80%)",
            "display": "flex",
            "label": "indicatorContainer",
            "padding": 8,
            "transition": "color 150ms",
          }
        }
      >
        <svg
          className="cr-autocomplete__dropdownIndicator cr-icon emotion-3 emotion-4"
          fill="#848a8a"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="cr-icon__base cr-icon__base-1"
            d="M7.299 10.641c.388.475 1.012.482 1.406 0L11.8 6.86c.389-.475.194-.86-.418-.86H4.623c-.62 0-.812.378-.418.86l3.094 3.781z"
          />
        </svg>
      </div>
    </div>
  </div>
  <input
    name="color-input"
    type="hidden"
    value=""
  />
</div>
`;

exports[`Autocomplete renders in loading mode 1`] = `
.emotion-8 {
  position: relative;
  box-sizing: border-box;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--vd-colour--box);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  box-shadow: none;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: none;
  position: relative;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  box-sizing: border-box;
  color: var(--vd-colour--text);
  word-break: normal;
  width: 100%;
  margin: 0px;
  padding: 0.3666666667rem 12px;
  border: 2px solid var(--vd-colour--framing);
  -webkit-transition-property: border-color,box-shadow;
  transition-property: border-color,box-shadow;
}

.emotion-7:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-7:hover {
  border-color: #848a8a;
}

.cr-autocomplete--error .emotion-7 {
  border-color: #b93435;
}

.cr-autocomplete--error .emotion-7 .cr-autocomplete__dropdownIndicator {
  fill: #b93435;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-0 {
  color: #abb3b3;
  margin-left: 2px;
  margin-right: 2px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

.emotion-1 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0,0%,20%);
  box-sizing: border-box;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  opacity: 1;
  cursor: pointer;
  color: #848a8a;
}

.emotion-6 div:hover .cr-autocomplete__clearIndicator {
  fill: #b93435;
}

.emotion-4 {
  width: 1rem;
  height: 1rem;
  vertical-align: text-bottom;
}

.emotion-3 {
  width: large;
  height: large;
}

<div
  className="emotion-8 cr-autocomplete"
  onKeyDown={[Function]}
>
  <div
    className="emotion-7 cr-autocomplete__control"
    onMouseDown={[Function]}
    onTouchEnd={[Function]}
  >
    <div
      className="emotion-2 cr-autocomplete__value-container"
    >
      <div
        className="emotion-0 cr-autocomplete__placeholder"
      >
        Choose a color
      </div>
      <div
        className="emotion-1"
      >
        <div
          className="cr-autocomplete__input"
          style={
            Object {
              "display": "inline-block",
            }
          }
        >
          <input
            aria-autocomplete="list"
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            disabled={false}
            id="color-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            spellCheck="false"
            style={
              Object {
                "background": 0,
                "border": 0,
                "boxSizing": "content-box",
                "color": "inherit",
                "fontSize": "inherit",
                "label": "input",
                "opacity": 1,
                "outline": 0,
                "padding": 0,
                "width": "1px",
              }
            }
            tabIndex="0"
            type="text"
            value=""
          />
          <div
            style={
              Object {
                "height": 0,
                "left": 0,
                "overflow": "scroll",
                "position": "absolute",
                "top": 0,
                "visibility": "hidden",
                "whiteSpace": "pre",
              }
            }
          >
            
          </div>
        </div>
      </div>
    </div>
    <div
      className="emotion-6 cr-autocomplete__indicators"
    >
      <div
        className="vd-loader emotion-3"
        data-testid="loading-spinner"
      />
      <div
        aria-hidden="true"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        style={
          Object {
            ":hover": Object {
              "color": "hsl(0, 0%, 60%)",
            },
            "boxSizing": "border-box",
            "color": "hsl(0, 0%, 80%)",
            "display": "flex",
            "label": "indicatorContainer",
            "padding": 8,
            "transition": "color 150ms",
          }
        }
      >
        <svg
          className="cr-autocomplete__dropdownIndicator cr-icon emotion-4 emotion-5"
          fill="#848a8a"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="cr-icon__base cr-icon__base-1"
            d="M7.299 10.641c.388.475 1.012.482 1.406 0L11.8 6.86c.389-.475.194-.86-.418-.86H4.623c-.62 0-.812.378-.418.86l3.094 3.781z"
          />
        </svg>
      </div>
    </div>
  </div>
  <input
    name="color-input"
    type="hidden"
    value=""
  />
</div>
`;

exports[`Autocomplete renders with an initial value 1`] = `
.emotion-9 {
  position: relative;
  box-sizing: border-box;
}

.emotion-8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: var(--vd-colour--box);
  border-color: hsl(0,0%,80%);
  border-radius: 4px;
  border-style: solid;
  border-width: 1px;
  box-shadow: none;
  cursor: text;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  min-height: 38px;
  outline: none;
  position: relative;
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  box-sizing: border-box;
  color: var(--vd-colour--text);
  word-break: normal;
  width: 100%;
  margin: 0px;
  padding: 0.3666666667rem 12px;
  border: 2px solid var(--vd-colour--framing);
  -webkit-transition-property: border-color,box-shadow;
  transition-property: border-color,box-shadow;
}

.emotion-8:hover {
  border-color: hsl(0,0%,70%);
}

.emotion-8:hover {
  border-color: #848a8a;
}

.cr-autocomplete--error .emotion-8 {
  border-color: #b93435;
}

.cr-autocomplete--error .emotion-8 .cr-autocomplete__dropdownIndicator {
  fill: #b93435;
}

.emotion-2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0px;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.emotion-1 {
  margin: 2px;
  padding-bottom: 2px;
  padding-top: 2px;
  visibility: visible;
  color: hsl(0,0%,20%);
  box-sizing: border-box;
}

.emotion-7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
  opacity: 1;
  cursor: pointer;
  color: #848a8a;
}

.emotion-7 div:hover .cr-autocomplete__clearIndicator {
  fill: #b93435;
}

.emotion-3 {
  width: 1rem;
  height: 1rem;
  vertical-align: text-bottom;
}

.emotion-0 {
  color: hsl(0,0%,20%);
  margin-left: 2px;
  margin-right: 2px;
  max-width: calc(100% - 8px);
  overflow: hidden;
  position: absolute;
  text-overflow: ellipsis;
  white-space: nowrap;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  box-sizing: border-box;
}

<div
  className="emotion-9 cr-autocomplete"
  onKeyDown={[Function]}
>
  <div
    className="emotion-8 cr-autocomplete__control"
    onMouseDown={[Function]}
    onTouchEnd={[Function]}
  >
    <div
      className="emotion-2 cr-autocomplete__value-container cr-autocomplete__value-container--has-value"
    >
      <div
        className="emotion-0 cr-autocomplete__single-value"
      >
        Red
      </div>
      <div
        className="emotion-1"
      >
        <div
          className="cr-autocomplete__input"
          style={
            Object {
              "display": "inline-block",
            }
          }
        >
          <input
            aria-autocomplete="list"
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            disabled={false}
            id="color-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            spellCheck="false"
            style={
              Object {
                "background": 0,
                "border": 0,
                "boxSizing": "content-box",
                "color": "inherit",
                "fontSize": "inherit",
                "label": "input",
                "opacity": 1,
                "outline": 0,
                "padding": 0,
                "width": "1px",
              }
            }
            tabIndex="0"
            type="text"
            value=""
          />
          <div
            style={
              Object {
                "height": 0,
                "left": 0,
                "overflow": "scroll",
                "position": "absolute",
                "top": 0,
                "visibility": "hidden",
                "whiteSpace": "pre",
              }
            }
          >
            
          </div>
        </div>
      </div>
    </div>
    <div
      className="emotion-7 cr-autocomplete__indicators"
    >
      <div
        aria-hidden="true"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        style={
          Object {
            ":hover": Object {
              "color": "hsl(0, 0%, 60%)",
            },
            "boxSizing": "border-box",
            "color": "hsl(0, 0%, 80%)",
            "display": "flex",
            "label": "indicatorContainer",
            "padding": 8,
            "transition": "color 150ms",
          }
        }
      >
        <svg
          className="cr-autocomplete__clearIndicator cr-icon emotion-3 emotion-4"
          fill="hsl(0, 0%, 80%)"
          style={
            Object {
              "height": "0.625rem",
              "width": "0.625rem",
            }
          }
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="cr-icon__base cr-icon__base-1"
            d="M10.216 8l3.325-3.325a1.567 1.567 0 1 0-2.216-2.216L8 5.784 4.675 2.459A1.567 1.567 0 0 0 2.46 4.675L5.784 8l-3.325 3.325a1.567 1.567 0 1 0 2.216 2.216L8 10.216l3.325 3.325a1.567 1.567 0 1 0 2.216-2.216L10.216 8z"
          />
        </svg>
      </div>
      <div
        aria-hidden="true"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        style={
          Object {
            ":hover": Object {
              "color": "hsl(0, 0%, 60%)",
            },
            "boxSizing": "border-box",
            "color": "hsl(0, 0%, 80%)",
            "display": "flex",
            "label": "indicatorContainer",
            "padding": 8,
            "transition": "color 150ms",
          }
        }
      >
        <svg
          className="cr-autocomplete__dropdownIndicator cr-icon emotion-3 emotion-4"
          fill="#848a8a"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            className="cr-icon__base cr-icon__base-1"
            d="M7.299 10.641c.388.475 1.012.482 1.406 0L11.8 6.86c.389-.475.194-.86-.418-.86H4.623c-.62 0-.812.378-.418.86l3.094 3.781z"
          />
        </svg>
      </div>
    </div>
  </div>
  <input
    name="color-input"
    type="hidden"
    value="1"
  />
</div>
`;
